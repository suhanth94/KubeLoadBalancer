---
 apiVersion: apps/v1
 kind: Deployment
 metadata:
   name: trivago-java-app
 spec:
   selector:
     matchLabels:
         app: trivago-java-app
   replicas: 2
   template:
     metadata:
       labels:
         app: trivago-java-app
     spec:
       containers:
         - name:  java-webserver
          #image: <Placeholder to specify java image>
           ports:
             - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: trivago-java-app
spec:
  selector:
    app: trivago-java-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      name: http
---
 apiVersion: apps/v1
 kind: Deployment
 metadata:
   name: trivago-go-app
 spec:
   selector:
     matchLabels:
         app: trivago-go-app
   replicas: 2
   template:
     metadata:
       labels:
         app: trivago-go-app
     spec:
       containers:
         - name:  go-webserver
          #image: <Placeholder to specoify path of go image>
           ports:
             - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: trivago-go-app
spec:
  selector:
    app: trivago-go-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      name: http
---
apiVersion: contour.heptio.com/v1beta1
kind: IngressRoute
metadata:
  name: trivago-ingress
spec:
  virtualhost:
    fqdn: trivago.demo.com  #Specify hostname as per your network policy if any
    #tls:
       #secretName: <Specify TLS secrets as per your network policy if any
  routes:
    - match: /
      services:
        - name: trivago-java-app
          port: 80
          weight: 30
        - name: trivago-go-app
          port: 80
          weight: 70
